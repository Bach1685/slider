(()=>{"use strict";class t{_HTML;get HTML(){return this._HTML}constructor(){this._HTML=document.createElement("div"),this._HTML.classList.add("slide")}addClasses(t){Array.isArray(t)?this._HTML.classList.add(...t):this._HTML.classList.add(t)}}let s=new class{_slides;_HTML;_slidesAreaHTML;_buttonLeftHTML;_buttonRightHTML;get HTML(){return this._HTML}constructor(){this._HTML=document.createElement("div"),this._HTML.classList.add("slider"),this._buttonLeftHTML=document.createElement("button"),this._buttonLeftHTML.classList.add("button"),this._buttonLeftHTML.classList.add("button--left"),this._HTML.append(this._buttonLeftHTML),this._slidesAreaHTML=document.createElement("div"),this._slidesAreaHTML.classList.add("slidesArea"),this._HTML.append(this._slidesAreaHTML),this._buttonRightHTML=document.createElement("button"),this._buttonRightHTML.classList.add("button"),this._buttonRightHTML.classList.add("button--right"),this._HTML.append(this._buttonRightHTML),this._slides=[]}addClasses(t){Array.isArray(t)?this._HTML.classList.add(...t):this._HTML.classList.add(t)}addSlides(t){if(Array.isArray(t))return this._slides.push(...t),void this._slidesAreaHTML.append(...t.map((t=>t.HTML)));this._slides.push(...t),this._slidesAreaHTML.append(t.HTML)}};const e=[new t,new t,new t];s.addSlides(e),document.body.append(s.HTML)})();